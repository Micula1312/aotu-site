---
import Base from "../layouts/Base.astro";
---
<Base>
  <Fragment slot="head-title">Abstract | Archive of the Untamed</Fragment>

  <header>
    <h1>ARCHIVE OF THE UNTAMED :: ABSTRACT</h1>
  </header>

  <pre id="abstract-terminal" style="white-space:pre-wrap; min-height:140px;"></pre>

  <script is:inline>
    console.log("[abstract] boot");

    const text = `>> BOOT SEQUENCE : archive_project()

:: INIT project_research
Archive of the Untamed -> artistic_research_project
Purpose: investigate [landscape_protection] + [public_space]
as zones of conflict_and_potential()

:: CONNECT urban_forest("Prati di Caprara", Bologna)
:: SYNC collective("Exit")
Archive = counter-narrative_tool + political_interface
via local_collab("Comitato Rigenerazione No Speculazione")

-> archive is not passive_storage()
-> archive = active_device.participatory(resistance, memory, rewilding)

:: DEFINE "wildness" as generative_force:
  - non_linear
  - disobedient
  - vision_producing
  - anti_normative

>> LAUNCH PLATFORM: https://thearchiveoftheuntamed.xyz/
:: upload heterogeneous_materials:
  - texts, sounds, images, voices, documents
:: relation_network(wild_entities, artists, activists)

>> BUILD prototype("high-tech_treehouse")
inspired_by: Parco Don Bosco (Bologna)
function: vertical_occupation_unit()
use_case: reclaim_urban_space()

>> ENGAGE mode("performance")
user = artist ; environment = urban_forest
  - actions: emotional_traversal
  - protocol: live_test(habitat_prototype)
  - logs: sensorial + embodied feedback

>> RETURN_1 : Casa dei Colori (Montagnola, Bologna)
input:
  - project_presentation
  - server_init("Discord_Channel") -> online_platform_boot
output:
  - video_mapping installation
  - live audiovisual performance

>> RETURN_2 : 6Artista (Pastificio Cerere, Rome)
archive_output = stratified_readings()
  - authored_by: artist_perspective()
  - context: shared_space.dialogue()

>> PUBLISH : editorial_dump()
archive_format = chaotic_documentation()
  - no_hierarchy
  - rhizomatic_structure()
  - open_links(multimedia_resources, external_spaces)

:: END_OF_ABSTRACT`;

    const el = document.getElementById("abstract-terminal");

    let i = 0, rafId = 0;
    const SPEED = 10; // ms per char

    function tick(){
      if (i < text.length) {
        el.textContent += text.charAt(i++);
        rafId = requestAnimationFrame(() => setTimeout(tick, SPEED));
      } else {
        cancelAnimationFrame(rafId);
      }
    }

    tick();
  </script>
</Base>
